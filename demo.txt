

DOA                     0xdD870fA1b7C4700F2BD7f44238821C26f7392148  
oracle contract owner   0x583031D1113aD414F02576BD6afaBfb302140225
product contact owner   0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
producer                0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2
retailer                0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db
CA                      0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB

https://ipfs.io/ipfs/QmR3UHoVTNnZzhBuRr2333KCBB2yKUfp9BXwpBShvsboMx

/* CA Registry Functionality ***********************************************************/

1. Deploy CARegistry.sol owner DOA 
    _owner: 0xdD870fA1b7C4700F2BD7f44238821C26f7392148
    from:   0xdD870fA1b7C4700F2BD7f44238821C26f7392148

2. Add public key of CA to CARegistry using addPublicKey function (from DOA account)
    addPublicKey: 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB
    from:         0xdD870fA1b7C4700F2BD7f44238821C26f7392148

3. Check public key of CA is registered using checkPublicKey (from any other account)
    checkPublicKey: 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB
    from:           0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db

4. Check some other public key using checkPublicKey 
    checkPublicKey: 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c
    from:           0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db



/* Product Functionality ***************************************************************/

5. Deploy Oracle.sol with oracle owner 
    _owner: 0x583031D1113aD414F02576BD6afaBfb302140225
    from:   0x583031D1113aD414F02576BD6afaBfb302140225

6. Deploy Product.sol with oracle address, DOA address and owner 
    _oracle: oracle address 
    _DOA:    AuthorityRegistry address 
    _owner:  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
    from:    0x5B38Da6a701c568545dCfcB03FcB875f56beddC4

7. addProducer: Add a producer as authorised to add products to the contract 
    _producer: 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2
    from:      0x5B38Da6a701c568545dCfcB03FcB875f56beddC4

8. addProduct: Send a product data to the contract from producer 
    _data:        0x900fab6b5135ca0b3403dc06ae2f0245972fbed9647009ea8f9b40cd748c80e0
    _temperature: 5
    _CID:         QmR3UHoVTNnZzhBuRr2333KCBB2yKUfp9BXwpBShvsboMx
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

9. getProduct: Verify the product was stored by using its batchID emited 
    _batchID:     from the emited event 
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

10. getDatabase: Verify the database mapping was stored by using batchID 
    _batchID:     from the emited event 
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

11. addCertificate: Add organic certificate and issuer signature to the product 
    _batchID:     from the emited event 
    _certificate: 0x082dcda8b35f23f58605030e2c2642a316ecb32bc867c8eeec03632f2d553a68
    _signature:   0xf3a997de1edb965884852af8fa2fda2db73c65f1600ee72afaf84549d183a80d6ef7075577d476982c31d0f9ae510e42999c8e5b049c33b529f933d80f57b0801b
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

12. getCertificate: Verify the certificate was stored 
    _batchID:     from the emited event 
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

13. verifyCertificate: Verify the validity of certificate before sale 
    _batchID:     from the emited event 
    from:         0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db

14. verifyProductHash: Verify off-chain data hash to on-chain hash before sale 
    to get new hash, the caller retrieves data using CID and computes hash again  
    _batchID:     from the emited event 
    _newHash:     0x900fab6b5135ca0b3403dc06ae2f0245972fbed9647009ea8f9b40cd748c80e0
    from:         0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db

15. updateOwner: Change the owner in the product after sale 
    _batchID:     from the emited event 
    _productHash: 0x900fab6b5135ca0b3403dc06ae2f0245972fbed9647009ea8f9b40cd748c80e0
    _newOwenr:    0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db
    from:         0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2

16. getTemperature: Request temperature from the oracle 
    _batchID:     from the emited event 
    from:         0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db



batchID 0xb0ca482a4a2e9fdabd287af29634a9da3e41425f2650d46ef638f89186829eef
